```{r}
library(tidyverse)
library(Hmisc)
```

```{r}
logs <- read_csv("https://dwillis.github.io/sports-data-files/cbblogs1523.csv")
```

```{r}
logs <- logs |> mutate(
  Differential = TeamScore - OpponentScore, 
  NetRebounds = TeamTotalRebounds - OpponentTotalRebounds,
  TurnoverMargin = TeamTurnovers - OpponentTurnovers)
```


```{r}
rebounds <- lm(Differential ~ NetRebounds, data=logs)
summary(rebounds)
```
Based off of Net Rounds, you can't accurately predict who will win and lose but there is a relation between net rebounds and outcomes of games. 


```{r}
rebounds_turnovers <- lm(Differential ~ NetRebounds + TurnoverMargin, data=logs)
summary(rebounds_turnovers)
```
Residual Standard Error = the smaller the number, that's a good thing
multicollinearity = don't add in things don't relate to each other

```{r}
simplelogs <- logs |> select_if(is.numeric) |> select(-Game) |> select(Differential, NetRebounds, TurnoverMargin, TeamFGPCT, TeamTotalRebounds, OpponentFGPCT, OpponentTotalRebounds)
```
simple logs= only has numeric columns 

```{r}
cormatrix <- rcorr(as.matrix(simplelogs))

cormatrix$r
```
+1 positive correlaton, -1 negative correlation 
you want to look at something that is positively correlated but not the same thing (Differential + FGPCT)

```{r}
model2 <- lm(Differential ~ NetRebounds + TurnoverMargin + TeamFGPCT + OpponentFGPCT, data=logs)
summary(model2)
```


```{r}
logs |> 
  filter(Team == "Michigan" & Season == '2020-2021' | Team == "Wisconsin" & Season == '2019-2020' | Team == "Michigan State" & Season == '2018-2019' | Team == "Michigan State" & Season == '2017-2018' | Team == 'Illinois' & Season == '2021-2022' | Team == 'Purdue' & Season == '2022-2023') |> 
  summarise(
    meanNetRebounds = mean(NetRebounds),
    meanTurnoverMargin = mean(TurnoverMargin),
    meanTeamFGPCT = mean(TeamFGPCT),
    meanOpponentFGPCT = mean(OpponentFGPCT)
  )
```
Means = on average 


```{r}
# (netrebounds estimate * meanNetRebounds) + (turnover margin estimate * meanTurnoverMargin) + (TeamFGPCT estimate * meanTeamFGPCT) + (OpponentFGPCT estimate * meanOpponentFGPCT) + Intercept
(0.654800*6.05) + (-1.310579*0.6333333) + (90.805990*0.4543167) + (-91.351310*0.4107167) + 0.287665
```
"Teams that behave like those teams will be their oppoents by 7 points"
```{r}
logs |> 
  filter(
    Team == "Maryland" & Season == '2022-2023'
    ) |> 
  summarise(
    meanNetRebounds = mean(NetRebounds),
    meanTurnoverMargin = mean(TurnoverMargin),
    meanTeamFGPCT = mean(TeamFGPCT),
    meanOpponentFGPCT = mean(OpponentFGPCT)
  )
```
```{r}
(0.654800*1.685714) + (-1.310579*0.9142857) + (90.805990*0.4517714) + (-91.351310*0.428) + 0.287665
```

```{r}
logs |> 
     filter(
         Team == "Maryland" & Season == '2022-2023'
     ) |> summarise(avg_score = mean(TeamScore), avg_opp = mean(OpponentScore))
```
```{r}
logs <- read_csv("https://dwillis.github.io/sports-data-files/cbblogs1523.csv")
```

```{r}
residualmodel <- logs |> mutate(differential = TeamScore - OpponentScore, FGPctMargin = TeamFGPCT - OpponentFGPCT)
```


```{r}
fit <- lm(differential ~ FGPctMargin, data = residualmodel)
summary(fit)
```

```{r}
residualmodel <- residualmodel |> mutate(predicted = predict(fit), residuals = residuals(fit))

residualmodel <- residualmodel |> filter(!is.na(FGPctMargin))
```


### Z-Scores

```{r}
library(tidyverse)
```
```{r}
gamelogs <- read_csv("https://dwillis.github.io/sports-data-files/wbblogs23.csv")
```

```{r}
teamquality <- gamelogs |> 
  select(Conference, Team, TeamFGPCT, TeamTotalRebounds, OpponentFGPCT, OpponentTotalRebounds)
```

```{r}
teamtotals <- teamquality |> 
  group_by(Conference, Team) |> 
  summarise(
    FGAvg = mean(TeamFGPCT), 
    ReboundAvg = mean(TeamTotalRebounds), 
    OppFGAvg = mean(OpponentFGPCT),
    OppRebAvg = mean(OpponentTotalRebounds)
    ) 
```

```{r}
teamzscore <- teamtotals |> 
  mutate(
    FGzscore = as.numeric(scale(FGAvg, center = TRUE, scale = TRUE)),
    RebZscore = as.numeric(scale(ReboundAvg, center = TRUE, scale = TRUE)),
    OppZscore = as.numeric(scale(OppFGAvg, center = TRUE, scale = TRUE)) * -1,
    OppRebZScore = as.numeric(scale(OppRebAvg, center = TRUE, scale = TRUE)) * -1,
    TotalZscore = FGzscore + RebZscore + OppZscore + OppRebZScore
  )  
```

```{r}
head(teamzscore)
```

```{r}
teamzscore |> arrange(desc(TotalZscore))
```

```{r}
teamzscore |> 
  filter(Conference == "Big Ten WBB") |> 
  arrange(desc(TotalZscore)) |>
  select(Team, TotalZscore)
```
Maryland and Ohio State still had reall good seasons but were out rebounded. Also, 0 means average. 

```{r}
powerfive_plus_one <- c("SEC WBB", "Big Ten WBB", "Pac-12 WBB", "Big 12 WBB", "ACC WBB", "Big East WBB")
teamzscore |> 
  filter(Conference %in% powerfive_plus_one) |> 
  arrange(desc(TotalZscore)) |>
  select(Team, TotalZscore)
```

### Early Season Analysis 

```{r}
games <- read_csv("https://raw.githubusercontent.com/dwillis/dwillis.github.io/main/docs/sports-data-files/cbblogs1524.csv")
```

```{r}
maryland_mbb <- games |>
  filter(Game < 5) |>
  filter (TeamFull == "Maryland Terrapins")
```

```{r}
maryland_mbb |> summarise(mean(Team3PPCT))
```
```{r}
maryland_mbb |> summarise(mean(Opponent3PPCT))
```

```{r}
ggplot() + 
  geom_hline(yintercept=0.3184286, color="red") + 
  geom_hline(yintercept=0.287	, color="blue") + 
  geom_line(data=maryland_mbb, aes(x=Date, y=Team3PPCT, group=Team)) + 
  geom_line(data=maryland_mbb, aes(x=Date, y=Opponent3PPCT, group=Team), color="green") + 
  scale_y_continuous(limits = c(0, 1)) +
  facet_wrap(~Game)
```
So, here it looks like through the first 4 games of a season, Maryland seems to have a few ups and downs. when it comes to their 3 point percentage compared to their opponents. In the seasons of 2021 and 2023, they actually held a higher 3 point percentage but almost flat lined when it came to games 3 and 4. 
