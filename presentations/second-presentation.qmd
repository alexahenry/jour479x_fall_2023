```{r}
library(tidyverse)
```

```{r}
logs <- read_csv("https://raw.githubusercontent.com/Sports-Roster-Data/womens-volleyball/main/rosters_2023_cleaned.csv")
```

```{r}
head(logs)
```

```{r}
logs |>
  filter(!is.na(state_clean)) |>
  select(team, primary_position, state_clean, name)
```

```{r}
logs |>
  group_by(state_clean) |>
  filter(!is.na(state_clean)) |>
  summarise(
    states = n()) |>
  arrange(desc(states))
```
With the new roaster data, the top ten from my first presentation has changed slightly. Wisconsin is actually now in the top 10 where I think previously they were maybe top 20. Same thing with Minn. and North Carolina. I think looking at this across all of NCAA helped in some way. Interestingly, California and Texas still lead the way by numbers. If I could find a way to break it down by division, that would be interesting. I wouldn't be surprised by the numbers if California and Texas are leading in D1. 
### Positions

```{r}
vbpositions <- logs |>
  select(primary_position, state_clean) |> 
  na.omit()
```

```{r}
vbpositions |>
  group_by(primary_position, state_clean) |>
  summarise(
    positions = n()) |> 
      arrange(desc(positions))
```
So, some of these numbers aren't shocking. Outsides are the primary position and come at an abundance no matter the state. But I did find it interesting that California produced the most aobut of Middle Blockers and Setters and Texas produces the most amount DS and Right Side. I have to wonder if that's due to the fact that they are able to play year round so players are able to develop in all areas of the game sooner. 
###Team and State

```{r}
teams <- read_csv("https://raw.githubusercontent.com/Sports-Roster-Data/womens-volleyball/main/vb_teams.csv")
```


```{r}
logs_with_teams <- logs |> inner_join(teams, join_by("team", "ncaa_id")) 
```

For Texas
```{r}
logs_with_teams |>
  filter(team_state == 'TX', state_clean == 'TX', division == 'I') |> 
  group_by(team) |> 
  summarize(count = n()) |> 
    arrange(desc(count))
```
For CA
```{r}
logs_with_teams |>
  filter(team_state == 'FL', state_clean == 'FL', division == 'I') |> 
  group_by(team) |> 
  summarize(count = n()) |> 
    arrange(desc(count))
```
For all schools
```{r}
logs_with_teams |>
  filter(division == "I") |> 
  group_by(team, team_state, state_clean) |> 
  summarize(count = n()) |> 
    arrange(desc(count)) |> na.omit()
```
So changing the division, it looks like smaller schools recruit in state where Division I schools tend to go out of state to look for their talent. 

UC Davis and UC Santa Barbara both have 17 home state players. 

```{r}
logs_with_teams |>
  filter(division == "I") |> 
  filter(conference == "Big Ten") |>
  filter(team_state == state_clean) |>
  group_by(team, team_state) |> 
  summarize(count = n()) |> 
    arrange(desc(count)) |> na.omit()
```

Here, in the Big Ten, Purdue has the most in state players in the Big Ten. It's interesting because their two best outsides are Chloe Chicoine and Eva Hudson who have now been named freshman of the year and earned first team recognition. So maybe, looking in state can be helpful. But in the case with Iowa, they were 0-20 in conference and only won 4 sets in conference play and they are the second highest for gaining players in-state. 

#Mutate
```{r}
logs_with_teams <- logs_with_teams |>
  mutate(in_out_state = case_when(
    team_state == state_clean ~ "IN",
    team_state != state_clean ~ "OUT",
    .default = NA
  ))

 logs_with_teams |>
   filter(conference == "SEC") |>
   group_by(team, conference, in_out_state) |>
   summarise(
     count = n()) |> 
    arrange(desc(count)) |> na.omit()
```
```{r}
logs_with_teams |>
  filter(division == "I") |>
  group_by(conference, in_out_state) |>
  summarise(
    count = n()
  ) |> arrange(desc(count)) |> na.omit()
```
So here, I found something here, the ACC actually has more out of state players in their conference than any conference in DI. FSU and Pitt share the ACC championship. Pittsburgh does not have anyone in state on their team. (FSU isn't in the data but their under previous school's column. 

### Bar Chart
```{r}
logs_with_conferences <- logs_with_teams |>
  select(conference, in_out_state) |> 
  summarise(
    count = n()
  ) |>
na.omit()|> pivot_wider(values_from = in_out_state)

ggplot() + 
  geom_point(data=logs_with_conferences, aes(x=conference, y=in_out_state)) +
  scale_y_continuous(limits = c(0, .7)) + 
  scale_x_continuous(limits = c(0, .7)) + 
  facet_wrap(~conference)
```

```{r}
logs_with_teams |>
  filter(division == "I") |> 
  filter(conference == "SEC") |>
  group_by(team, team_state, state_clean) |> 
  summarize(count = n()) |> 
    arrange(desc(count)) |> na.omit()
```
### Looking at Top Schools in NCAA Tournment 

```{r}
logs_with_teams |>
  filter(division == "I") |> 
  group_by(team) |> 
  summarize(count = n_distinct(state_clean)) |> 
    arrange(desc(count)) |> na.omit()
```
A look at unique states each school has. (keep working with this, break down between Big conference and HBCU)
Louisville
```{r}
logs_with_teams |>
  filter(division == "I") |> 
  filter(conference == "ACC") |>
  filter(team == "Louisville") |>
  group_by(team_state, state_clean) |> 
  summarize(count = n()) |> 
    arrange(desc(count)) |> na.omit()
```
Pittsburgh
```{r}
logs_with_teams |>
  filter(division == "I") |> 
  filter(conference == "ACC") |>
  filter(team == "Pittsburgh") |>
  group_by(team_state, state_clean) |> 
  summarize(count = n()) |> 
    arrange(desc(count)) |> na.omit()
```

### Chart (come back to this)
```{r}
all_states <- logs_with_teams |>
  group_by(state_clean) |> 
  summarize(count = n()) |> 
    arrange(desc(count))

ggplot() +
  geom_histogram(data=all_states, aes(y=count)) +
  facet_wrap(~state_clean)
  
```


### Per Capita 

```{r}
states <- read_csv("")
```
I just need to make this a csv. But my data got a little messy because I'm missing the division part of my work so I can sort it the way I want to which I think would help me with the per capita part. I think making this part maybe a beeswarm chart could be good. Other than facet wraps and bar charts for the positions is what I'm thinking would be best. 

So I think I may just need the division part back in the data and I can keep trucking along. 
